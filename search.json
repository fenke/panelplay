[
  {
    "objectID": "core.html",
    "href": "core.html",
    "title": "core",
    "section": "",
    "text": "source\n\nfoo\n\n foo ()",
    "crumbs": [
      "core"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "panelplay",
    "section": "",
    "text": "This file will become your README and also the index of your documentation.",
    "crumbs": [
      "panelplay"
    ]
  },
  {
    "objectID": "index.html#developer-guide",
    "href": "index.html#developer-guide",
    "title": "panelplay",
    "section": "Developer Guide",
    "text": "Developer Guide\nIf you are new to using nbdev and/or Holoviz/Panelhere are some useful pointers to get you started.\n\nNBDEV Quick Start Guide\nPanel Quick Start Guide and Notebook development.\n\n\nInstall panelplay in Development mode\n# make sure panelplay package is installed in development mode\n$ pip install -e .\n\n# make changes under nbs/ directory\n# ...\n\n# compile to have changes apply to panelplay\n$ nbdev_prepare",
    "crumbs": [
      "panelplay"
    ]
  },
  {
    "objectID": "index.html#usage",
    "href": "index.html#usage",
    "title": "panelplay",
    "section": "Usage",
    "text": "Usage\n\nInstallation\nInstall latest from the GitHub repository:\n$ pip install git+https://github.com/fenke/panelplay.git\nor from pypi\n$ pip install panelplay\n\n\nDocumentation\nDocumentation can be found hosted on this GitHub repositoryâ€™s pages. Additionally you can find package manager specific guidelines on conda and pypi respectively.",
    "crumbs": [
      "panelplay"
    ]
  },
  {
    "objectID": "tutorials/started-1.html",
    "href": "tutorials/started-1.html",
    "title": "Get Started",
    "section": "",
    "text": "import hvplot.pandas\nimport numpy as np\nimport pandas as pd\nimport panel as pn\n\n\nPRIMARY_COLOR = \"#0072B5\"\nSECONDARY_COLOR = \"#B54300\"\nCSV_FILE = (\n    \"https://raw.githubusercontent.com/holoviz/panel/main/examples/assets/occupancy.csv\"\n\n)\n\n\npn.extension(design=\"material\", sizing_mode=\"stretch_width\")\n\n\n@pn.cache\ndef load_data():\n    return pd.read_csv(CSV_FILE, parse_dates=[\"date\"], index_col=\"date\")\n\ndata   = load_data()\ndata.tail()\n\n\ndef transform_data(column, window=30, sigma=10):\n    avg = data[column].rolling(window=window).mean()\n    residue = data[column] - avg\n    std = residue.rolling(window=window).std()\n    outliers = np.abs(residue) &gt; sigma * std\n    return avg, avg[outliers]\n\n\ndef get_plot(column, window, sigma):\n    avg, outliers = transform_data(column, window, sigma)\n    return avg.hvplot(\n        height=300, legend=False, color=PRIMARY_COLOR\n    ) * outliers.hvplot.scatter(color=SECONDARY_COLOR, padding=0.1, legend=False)\n\n\nget_plot('Temperature', window=20, sigma=10)\n\n\ncolumn_widget = pn.widgets.Select(name='Column', value='Temperature', options=list(data.columns))\nwindow_widget = pn.widgets.IntSlider(name='Window', value=30, start=1, end=60)\nsigma_widget = pn.widgets.IntSlider(name='Sigma', value=10, start=1, end=30)\n\n\nbound_plot = pn.bind(get_plot, column=column_widget, window=window_widget, sigma=sigma_widget)\n\n\nwidgets = pn.Column(column_widget, window_widget, sigma_widget, sizing_mode='fixed', width=300)\npn.Column(widgets, bound_plot)\n\n\npn.template.MaterialTemplate(\n    site=\"Panel\",\n    title=\"Getting Started App\",\n    sidebar=[column_widget, window_widget, sigma_widget],\n    main=[bound_plot],\n).servable(); # The ; is needed in the notebook to not display the template. Its not needed in a script",
    "crumbs": [
      "tutorials",
      "Get Started"
    ]
  }
]